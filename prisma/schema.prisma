generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// チーム
model Teams {
  id       Int    @id @default(autoincrement())
  name String @map("name") @db.VarChar(255)

  // child
  players Players[]
  matches Matches?
  @@map("teams")
}

// 選手
model Players{
  id       Int    @id @default(autoincrement())
  name String @map("name") @db.VarChar(255)

  // parent
  teams Teams @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId Int @unique @map("team_id")

  // child
  matchStats MatchStats?
}

// 試合
model Matches {
  id        Int      @id @default(autoincrement())
  eventedAt DateTime @default(now()) @map("evented_at")

  homeTeamName String @map("home_team_name") @db.VarChar(255)
  opponentTeamName String @map("opponent_team_name")

  // parent
  teams   Teams @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId Int @unique @map("team_id")

  // child
  matchStats MatchStats?
  matchProgress MatchProgress?

  @@map("matches")
}

// 試合のデータ
model MatchStats {
  id             Int @id @default(autoincrement())

  spikes         Int @map("spikes")
  spikeSuccesses Int @map("spike_successes")
  spikeMistakes  Int @map("spike_mistakes")

  // parent
  players  Players @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId Int     @unique @map("player_id")
  matches  Matches @relation(fields: [matchId], references: [id], onDelete: Cascade)
  matchId  Int     @unique @map("match_id")
}

model MatchProgress {
  id                Int @id @default(autoincrement())
  setNumber         Int @map("set_number")
  homeTeamScore     Int @map("home_team_score")
  opponentTeamScore Int @map("opponent_team_score")

  // parent
  matches  Matches @relation(fields: [matchId], references: [id], onDelete: Cascade)
  matchId  Int     @unique @map("match_id")
}